/*
 * This file is generated by jOOQ.
 */
package washine_db.jooq.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import washine_db.jooq.generated.tables.Partecipazionelavaggio;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PartecipazionelavaggioRecord extends UpdatableRecordImpl<PartecipazionelavaggioRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PARTECIPAZIONELAVAGGIO.IdLavaggio</code>.
     */
    public void setIdlavaggio(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PARTECIPAZIONELAVAGGIO.IdLavaggio</code>.
     */
    public String getIdlavaggio() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PARTECIPAZIONELAVAGGIO.IdPartecipante</code>.
     */
    public void setIdpartecipante(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PARTECIPAZIONELAVAGGIO.IdPartecipante</code>.
     */
    public String getIdpartecipante() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Partecipazionelavaggio.PARTECIPAZIONELAVAGGIO.IDLAVAGGIO;
    }

    @Override
    public Field<String> field2() {
        return Partecipazionelavaggio.PARTECIPAZIONELAVAGGIO.IDPARTECIPANTE;
    }

    @Override
    public String component1() {
        return getIdlavaggio();
    }

    @Override
    public String component2() {
        return getIdpartecipante();
    }

    @Override
    public String value1() {
        return getIdlavaggio();
    }

    @Override
    public String value2() {
        return getIdpartecipante();
    }

    @Override
    public PartecipazionelavaggioRecord value1(String value) {
        setIdlavaggio(value);
        return this;
    }

    @Override
    public PartecipazionelavaggioRecord value2(String value) {
        setIdpartecipante(value);
        return this;
    }

    @Override
    public PartecipazionelavaggioRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PartecipazionelavaggioRecord
     */
    public PartecipazionelavaggioRecord() {
        super(Partecipazionelavaggio.PARTECIPAZIONELAVAGGIO);
    }

    /**
     * Create a detached, initialised PartecipazionelavaggioRecord
     */
    public PartecipazionelavaggioRecord(String idlavaggio, String idpartecipante) {
        super(Partecipazionelavaggio.PARTECIPAZIONELAVAGGIO);

        setIdlavaggio(idlavaggio);
        setIdpartecipante(idpartecipante);
        resetChangedOnNotNull();
    }
}
