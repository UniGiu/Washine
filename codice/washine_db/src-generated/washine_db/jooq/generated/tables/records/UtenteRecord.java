/*
 * This file is generated by jOOQ.
 */
package washine_db.jooq.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import washine_db.jooq.generated.tables.Utente;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UtenteRecord extends UpdatableRecordImpl<UtenteRecord> implements Record5<String, String, String, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>UTENTE.Id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>UTENTE.Id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>UTENTE.Email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>UTENTE.Email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>UTENTE.Password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>UTENTE.Password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>UTENTE.Livello</code>.
     */
    public void setLivello(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>UTENTE.Livello</code>.
     */
    public Integer getLivello() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>UTENTE.Bloccato</code>.
     */
    public void setBloccato(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>UTENTE.Bloccato</code>.
     */
    public Boolean getBloccato() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, Integer, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, Integer, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Utente.UTENTE.ID;
    }

    @Override
    public Field<String> field2() {
        return Utente.UTENTE.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return Utente.UTENTE.PASSWORD;
    }

    @Override
    public Field<Integer> field4() {
        return Utente.UTENTE.LIVELLO;
    }

    @Override
    public Field<Boolean> field5() {
        return Utente.UTENTE.BLOCCATO;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public Integer component4() {
        return getLivello();
    }

    @Override
    public Boolean component5() {
        return getBloccato();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public Integer value4() {
        return getLivello();
    }

    @Override
    public Boolean value5() {
        return getBloccato();
    }

    @Override
    public UtenteRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public UtenteRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UtenteRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UtenteRecord value4(Integer value) {
        setLivello(value);
        return this;
    }

    @Override
    public UtenteRecord value5(Boolean value) {
        setBloccato(value);
        return this;
    }

    @Override
    public UtenteRecord values(String value1, String value2, String value3, Integer value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UtenteRecord
     */
    public UtenteRecord() {
        super(Utente.UTENTE);
    }

    /**
     * Create a detached, initialised UtenteRecord
     */
    public UtenteRecord(String id, String email, String password, Integer livello, Boolean bloccato) {
        super(Utente.UTENTE);

        setId(id);
        setEmail(email);
        setPassword(password);
        setLivello(livello);
        setBloccato(bloccato);
        resetChangedOnNotNull();
    }
}
