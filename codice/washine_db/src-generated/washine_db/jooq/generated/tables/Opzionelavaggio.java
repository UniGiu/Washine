/*
 * This file is generated by jOOQ.
 */
package washine_db.jooq.generated.tables;


import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function22;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row22;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import washine_db.jooq.generated.DefaultSchema;
import washine_db.jooq.generated.Keys;
import washine_db.jooq.generated.tables.records.OpzionelavaggioRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Opzionelavaggio extends TableImpl<OpzionelavaggioRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>OPZIONELAVAGGIO</code>
     */
    public static final Opzionelavaggio OPZIONELAVAGGIO = new Opzionelavaggio();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OpzionelavaggioRecord> getRecordType() {
        return OpzionelavaggioRecord.class;
    }

    /**
     * The column <code>OPZIONELAVAGGIO.IdLavaggio</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> IDLAVAGGIO = createField(DSL.name("IdLavaggio"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.TempoVisibilita</code>.
     */
    public final TableField<OpzionelavaggioRecord, Integer> TEMPOVISIBILITA = createField(DSL.name("TempoVisibilita"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.DataOra</code>.
     */
    public final TableField<OpzionelavaggioRecord, LocalDate> DATAORA = createField(DSL.name("DataOra"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.DurataMinuti</code>.
     */
    public final TableField<OpzionelavaggioRecord, Integer> DURATAMINUTI = createField(DSL.name("DurataMinuti"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.CaricoIniziale</code>.
     */
    public final TableField<OpzionelavaggioRecord, Double> CARICOINIZIALE = createField(DSL.name("CaricoIniziale"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.CaricoMax</code>.
     */
    public final TableField<OpzionelavaggioRecord, Double> CARICOMAX = createField(DSL.name("CaricoMax"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.Temperatura</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> TEMPERATURA = createField(DSL.name("Temperatura"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.NumeroGiri</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> NUMEROGIRI = createField(DSL.name("NumeroGiri"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.TipoTessuti</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> TIPOTESSUTI = createField(DSL.name("TipoTessuti"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.Colore</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> COLORE = createField(DSL.name("Colore"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.TipoDetersivi</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> TIPODETERSIVI = createField(DSL.name("TipoDetersivi"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.TipoRimborso</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> TIPORIMBORSO = createField(DSL.name("TipoRimborso"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.Intimo</code>.
     */
    public final TableField<OpzionelavaggioRecord, Boolean> INTIMO = createField(DSL.name("Intimo"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.IndirizzoRitiro</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> INDIRIZZORITIRO = createField(DSL.name("IndirizzoRitiro"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.IndirizzoConsegna</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> INDIRIZZOCONSEGNA = createField(DSL.name("IndirizzoConsegna"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.DisponibilitaRitiro</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> DISPONIBILITARITIRO = createField(DSL.name("DisponibilitaRitiro"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.DisponibilitaConsegna</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> DISPONIBILITACONSEGNA = createField(DSL.name("DisponibilitaConsegna"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.Asciugatura</code>.
     */
    public final TableField<OpzionelavaggioRecord, String> ASCIUGATURA = createField(DSL.name("Asciugatura"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.Stiratura</code>.
     */
    public final TableField<OpzionelavaggioRecord, Boolean> STIRATURA = createField(DSL.name("Stiratura"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.CaricoMaxPartecipante</code>.
     */
    public final TableField<OpzionelavaggioRecord, Double> CARICOMAXPARTECIPANTE = createField(DSL.name("CaricoMaxPartecipante"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.DataAperturaAccessoLavaggio</code>.
     */
    public final TableField<OpzionelavaggioRecord, LocalDate> DATAAPERTURAACCESSOLAVAGGIO = createField(DSL.name("DataAperturaAccessoLavaggio"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>OPZIONELAVAGGIO.DataChiusuraAccessoLavaggio</code>.
     */
    public final TableField<OpzionelavaggioRecord, LocalDate> DATACHIUSURAACCESSOLAVAGGIO = createField(DSL.name("DataChiusuraAccessoLavaggio"), SQLDataType.LOCALDATE, this, "");

    private Opzionelavaggio(Name alias, Table<OpzionelavaggioRecord> aliased) {
        this(alias, aliased, null);
    }

    private Opzionelavaggio(Name alias, Table<OpzionelavaggioRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>OPZIONELAVAGGIO</code> table reference
     */
    public Opzionelavaggio(String alias) {
        this(DSL.name(alias), OPZIONELAVAGGIO);
    }

    /**
     * Create an aliased <code>OPZIONELAVAGGIO</code> table reference
     */
    public Opzionelavaggio(Name alias) {
        this(alias, OPZIONELAVAGGIO);
    }

    /**
     * Create a <code>OPZIONELAVAGGIO</code> table reference
     */
    public Opzionelavaggio() {
        this(DSL.name("OPZIONELAVAGGIO"), null);
    }

    public <O extends Record> Opzionelavaggio(Table<O> child, ForeignKey<O, OpzionelavaggioRecord> key) {
        super(child, key, OPZIONELAVAGGIO);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<OpzionelavaggioRecord> getPrimaryKey() {
        return Keys.OPZIONELAVAGGIO__PK_OPZIONELAVAGGIO;
    }

    @Override
    public List<ForeignKey<OpzionelavaggioRecord, ?>> getReferences() {
        return Arrays.asList(Keys.OPZIONELAVAGGIO__FK_OPZIONELAVAGGIO_PK_LAVAGGIO);
    }

    private transient Lavaggio _lavaggio;

    /**
     * Get the implicit join path to the <code>LAVAGGIO</code> table.
     */
    public Lavaggio lavaggio() {
        if (_lavaggio == null)
            _lavaggio = new Lavaggio(this, Keys.OPZIONELAVAGGIO__FK_OPZIONELAVAGGIO_PK_LAVAGGIO);

        return _lavaggio;
    }

    @Override
    public Opzionelavaggio as(String alias) {
        return new Opzionelavaggio(DSL.name(alias), this);
    }

    @Override
    public Opzionelavaggio as(Name alias) {
        return new Opzionelavaggio(alias, this);
    }

    @Override
    public Opzionelavaggio as(Table<?> alias) {
        return new Opzionelavaggio(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public Opzionelavaggio rename(String name) {
        return new Opzionelavaggio(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Opzionelavaggio rename(Name name) {
        return new Opzionelavaggio(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public Opzionelavaggio rename(Table<?> name) {
        return new Opzionelavaggio(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row22 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row22<String, Integer, LocalDate, Integer, Double, Double, String, String, String, String, String, String, Boolean, String, String, String, String, String, Boolean, Double, LocalDate, LocalDate> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function22<? super String, ? super Integer, ? super LocalDate, ? super Integer, ? super Double, ? super Double, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super Boolean, ? super String, ? super String, ? super String, ? super String, ? super String, ? super Boolean, ? super Double, ? super LocalDate, ? super LocalDate, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function22<? super String, ? super Integer, ? super LocalDate, ? super Integer, ? super Double, ? super Double, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super Boolean, ? super String, ? super String, ? super String, ? super String, ? super String, ? super Boolean, ? super Double, ? super LocalDate, ? super LocalDate, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
